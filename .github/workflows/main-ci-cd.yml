name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger of the production deployment workflow

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Clean and reinstall dependencies
        run: |
          rm -rf node_modules
          npm install

      - name: Fix permissions for node modules
        run: sudo chmod -R 755 node_modules

      - name: Rebuild bcrypt from source
        run: |
          npm install -g node-gyp
          npm rebuild bcrypt --build-from-source

      - name: Install jest
        run: npm install --save-dev jest

      - name: Set Jest permissions
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t us-east1-docker.pkg.dev/share2teach/share2teach/share2teach-backend:latest -f docker/Dockerfile .

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use Google Artifact Registry
        run: gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Push Docker image to Google Artifact Registry
        run: docker push us-east1-docker.pkg.dev/share2teach/share2teach/share2teach-backend:latest

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker tag us-east1-docker.pkg.dev/share2teach/share2teach/share2teach-backend:latest docker.io/sosokwani/share2teach-backend:latest
          docker push docker.io/sosokwani/share2teach-backend:latest

  deploy-development:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Google Cloud Run (Development)
        run: |
          gcloud run deploy share2teach-backend-dev \
          --image us-east1-docker.pkg.dev/share2teach/share2teach/share2teach-backend:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Output the Development URL
        run: |
          echo "Development URL: $(gcloud run services describe share2teach-backend-dev --platform managed --region us-central1 --format 'value(status.url)')"

  approve-deployment:
    needs: deploy-development
    runs-on: ubuntu-latest
    steps:
      - name: Approval
        run: |
          echo "Deployment to production requires manual approval. Trigger the production deployment workflow manually."

  deploy-production:
    runs-on: ubuntu-latest
    needs: approve-deployment
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Google Cloud Run (Production)
        run: |
          gcloud run deploy share2teach-backend-prod \
          --image us-east1-docker.pkg.dev/share2teach/share2teach/share2teach-backend:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Output the Production URL
        run: |
          echo "Production URL: $(gcloud run services describe share2teach-backend-prod --platform managed --region us-central1 --format 'value(status.url)')"
