name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Install jest
        run: npm install --save-dev jest

      - name: Set Jest permissions
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/share2teach-backend:latest -f docker/Dockerfile .

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker

      - name: Push Docker image to Google Container Registry
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/share2teach-backend:latest

  deploy-development:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Google Cloud Run (Development)
        run: |
          gcloud run deploy share2teach-backend-dev \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/share2teach-backend:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Output the Development URL
        run: |
          echo "Development URL: $(gcloud run services describe share2teach-backend-dev --platform managed --region us-central1 --format 'value(status.url)')"

  approve-deployment:
    needs: deploy-development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Approval Step
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    needs: approve-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Google Cloud Run (Production)
        run: |
          gcloud run deploy share2teach-backend-prod \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/share2teach-backend:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Output the Production URL
        run: |
          echo "Production URL: $(gcloud run services describe share2teach-backend-prod --platform managed --region us-central1 --format 'value(status.url)')"
